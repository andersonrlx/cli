terraform {
  required_version = ">= 1.7.0"
  required_providers {
    aws = { source = "hashicorp/aws", version = "~> 5.0" }
  }
}
provider "aws" { region = var.region }

module "vpc" {
  source  = "terraform-aws-modules/vpc/aws"
  version = "~> 5.0"
  name = "${var.name}-vpc"
  cidr = "10.2.0.0/16"
  azs  = ["${var.region}a", "${var.region}b"]
  private_subnets = ["10.2.1.0/24", "10.2.2.0/24"]
  public_subnets  = ["10.2.101.0/24", "10.2.102.0/24"]
  enable_nat_gateway = true
  single_nat_gateway = true
}

module "db" {
  source  = "terraform-aws-modules/rds/aws"
  version = "~> 6.7"

  identifier = "${var.name}-pg"

  engine               = "postgres"
  engine_version       = var.engine_version
  family               = "postgres15"
  major_engine_version = "15"
  instance_class       = var.instance_class

  allocated_storage     = 20
  max_allocated_storage = 100

  db_name  = "appdb"
  username = "postgres"
  password = var.db_password
  port     = 5432

  multi_az               = false
  storage_encrypted      = true
  skip_final_snapshot    = true
  publicly_accessible    = false

  vpc_security_group_ids = [aws_security_group.db.id]
  subnet_ids             = module.vpc.private_subnets

  maintenance_window     = "Sun:23:00-Mon:01:30"
  backup_window          = "03:00-06:00"
  backup_retention_period = 7

  create_db_subnet_group = true
  family_use_name_prefix = false
}

resource "aws_security_group" "db" {
  name   = "${var.name}-db-sg"
  vpc_id = module.vpc.vpc_id
  ingress {
    from_port   = 5432
    to_port     = 5432
    protocol    = "tcp"
    cidr_blocks = ["10.0.0.0/8"]
  }
  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }
}

output "db_endpoint" { value = module.db.db_instance_endpoint }
output "db_name"     { value = module.db.db_instance_identifier }
